// <auto-generated />
using System;
using ISE309.Odev.BLL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ISE309.Odev.BLL.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211215225043_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CategoryCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CategoryStatus")
                        .HasColumnType("bit");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Menu", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MenuCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MenuPrice")
                        .HasColumnType("float");

                    b.Property<bool>("MenuStatus")
                        .HasColumnType("bit");

                    b.HasKey("MenuID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.MenuProduct", b =>
                {
                    b.Property<int?>("MenuID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("MenuID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("MenuProduct");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderPayment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OrderPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("OrderShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<bool>("ProductStatus")
                        .HasColumnType("bit");

                    b.HasKey("ProductID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Restaurant", b =>
                {
                    b.Property<int>("RestaurantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RestaurantAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RestaurantCreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("RestaurantDeliveryTime")
                        .HasColumnType("int");

                    b.Property<double>("RestaurantMinDelivery")
                        .HasColumnType("float");

                    b.Property<string>("RestaurantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RestaurantRating")
                        .HasColumnType("float");

                    b.Property<bool>("RestaurantStatus")
                        .HasColumnType("bit");

                    b.Property<string>("RestaurantWorkingHours")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RestaurantID");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Weight", b =>
                {
                    b.Property<int>("WeightID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WeightType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("WeightValue")
                        .HasColumnType("float");

                    b.HasKey("WeightID");

                    b.ToTable("Weights");
                });

            modelBuilder.Entity("ProductWeight", b =>
                {
                    b.Property<int>("ProductsProductID")
                        .HasColumnType("int");

                    b.Property<int>("WeightsWeightID")
                        .HasColumnType("int");

                    b.HasKey("ProductsProductID", "WeightsWeightID");

                    b.HasIndex("WeightsWeightID");

                    b.ToTable("ProductWeight");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Category", b =>
                {
                    b.HasOne("ISE309.Odev.Core.DbEntities.Restaurant", "Restaurant")
                        .WithMany("Categories")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Menu", b =>
                {
                    b.HasOne("ISE309.Odev.Core.DbEntities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.MenuProduct", b =>
                {
                    b.HasOne("ISE309.Odev.Core.DbEntities.Menu", "Menu")
                        .WithMany("MenuProducts")
                        .HasForeignKey("MenuID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISE309.Odev.Core.DbEntities.Product", "Product")
                        .WithMany("MenuProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Order", b =>
                {
                    b.HasOne("ISE309.Odev.Core.DbEntities.Restaurant", "Restaurant")
                        .WithMany()
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Product", b =>
                {
                    b.HasOne("ISE309.Odev.Core.DbEntities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ProductWeight", b =>
                {
                    b.HasOne("ISE309.Odev.Core.DbEntities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ISE309.Odev.Core.DbEntities.Weight", null)
                        .WithMany()
                        .HasForeignKey("WeightsWeightID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Menu", b =>
                {
                    b.Navigation("MenuProducts");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Product", b =>
                {
                    b.Navigation("MenuProducts");
                });

            modelBuilder.Entity("ISE309.Odev.Core.DbEntities.Restaurant", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
